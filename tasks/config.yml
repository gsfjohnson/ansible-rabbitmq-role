---

- name: create the ssl folder for rabbitmq
  file:
    path=/etc/rabbitmq/ssl/
    owner=rabbitmq
    group=rabbitmq
    mode=0750
    state=directory
  when: rabbitmq_ssl

- name: copy the ssl certificates
  copy:
    src={{ item.src }}
    dest={{ item.dest }}
    owner=rabbitmq
    group=rabbitmq
    mode=0640
    backup=yes
  with_items:
    - src: "{{ rabbitmq_cacert }}"
      dest: "{{ rabbitmq_conf_ssl_options_cacertfile }}"
    - src: "{{ rabbitmq_server_key }}"
      dest: "{{ rabbitmq_conf_ssl_options_keyfile }}"
    - src: "{{ rabbitmq_server_cert }}"
      dest: "{{ rabbitmq_conf_ssl_options_certfile }}"
  when: rabbitmq_ssl

- name: generate the configuration of rabbitmq
  template:
    src=rabbitmq.config.j2
    dest=/etc/rabbitmq/rabbitmq.config
    owner=rabbitmq
    group=rabbitmq
    mode=0644
    backup=yes
  notify: restart rabbitmq-server

- name: ensure rabbitmq is runned
  service: name=rabbitmq-server state=started

- name: add rabbitmq vhost
  rabbitmq_vhost: >
    name={{ item.name }}
    node={{ item.node | default('rabbit') }}
    tracing={{ item.tracing | default('no') }}
    state=present
  with_items: rabbitmq_vhost_definitions

- name: add rabbitmq user and set privileges
  rabbitmq_user:
    user={{ item.user }}
    password={{ item.password }}
    vhost={{ item.vhost | default('/', false) }}
    node={{ item.node | default('rabbit') }}
    tags={{ (item.tags | default('')) | join(',') }}
    configure_priv={{ item.configure_priv | default('.*') }}
    read_priv={{ item.read_priv | default('.*') }}
    write_priv={{ item.write_priv | default('.*') }}
    state=present
    force={{ item.force|default('yes') }}
  with_items: rabbitmq_users_definitions

- name: remove guest user (hostname)
  rabbitmq_user:
    user=guest
    vhost=/
    node="rabbit@{{ ansible_hostname }}"
    state=absent
  register: rm_guest_hostname
  ignore_errors: true

- name: remove guest user (default)
  rabbitmq_user:
    user=guest
    vhost=/
    state=absent
  when: rm_guest_hostname|failed

